{"id":"node_modules/faker/lib/mersenne.js","dependencies":[{"name":"C:\\Users\\teles\\Documents\\Code\\learning-steele\\React-Typscript-Portfolio\\01-typescript-basics\\03-map-app\\package.json","includedInParent":true,"mtime":1628013696013},{"name":"C:\\Users\\teles\\Documents\\Code\\learning-steele\\React-Typscript-Portfolio\\01-typescript-basics\\03-map-app\\node_modules\\faker\\package.json","includedInParent":true,"mtime":499162500000},{"name":"../vendor/mersenne","loc":{"line":1,"column":18},"parent":"C:\\Users\\teles\\Documents\\Code\\learning-steele\\React-Typscript-Portfolio\\01-typescript-basics\\03-map-app\\node_modules\\faker\\lib\\mersenne.js","resolved":"C:\\Users\\teles\\Documents\\Code\\learning-steele\\React-Typscript-Portfolio\\01-typescript-basics\\03-map-app\\node_modules\\faker\\vendor\\mersenne.js"}],"generated":{"js":"var Gen = require('../vendor/mersenne').MersenneTwister19937;\n\nfunction Mersenne() {\n  var gen = new Gen();\n  gen.init_genrand((new Date).getTime() % 1000000000);\n\n  this.rand = function(max, min) {\n    if (max === undefined)\n    {\n      min = 0;\n      max = 32768;\n    }\n    return Math.floor(gen.genrand_real2() * (max - min) + min);\n  }\n  this.seed = function(S) {\n    if (typeof(S) != 'number')\n    {\n      throw new Error(\"seed(S) must take numeric argument; is \" + typeof(S));\n    }\n    gen.init_genrand(S);\n  }\n  this.seed_array = function(A) {\n    if (typeof(A) != 'object')\n    {\n      throw new Error(\"seed_array(A) must take array of numbers; is \" + typeof(A));\n    }\n    gen.init_by_array(A, A.length);\n  }\n}\n\nmodule.exports = Mersenne;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/faker/lib/mersenne.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/faker/lib/mersenne.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/faker/lib/mersenne.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/faker/lib/mersenne.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/faker/lib/mersenne.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/faker/lib/mersenne.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/faker/lib/mersenne.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/faker/lib/mersenne.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/faker/lib/mersenne.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/faker/lib/mersenne.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/faker/lib/mersenne.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/faker/lib/mersenne.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/faker/lib/mersenne.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/faker/lib/mersenne.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/faker/lib/mersenne.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/faker/lib/mersenne.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/faker/lib/mersenne.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/faker/lib/mersenne.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/faker/lib/mersenne.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/faker/lib/mersenne.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/faker/lib/mersenne.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/faker/lib/mersenne.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/faker/lib/mersenne.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/faker/lib/mersenne.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/faker/lib/mersenne.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/faker/lib/mersenne.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/faker/lib/mersenne.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/faker/lib/mersenne.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/faker/lib/mersenne.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/faker/lib/mersenne.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/faker/lib/mersenne.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/faker/lib/mersenne.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}}],"sources":{"node_modules/faker/lib/mersenne.js":"var Gen = require('../vendor/mersenne').MersenneTwister19937;\n\nfunction Mersenne() {\n  var gen = new Gen();\n  gen.init_genrand((new Date).getTime() % 1000000000);\n\n  this.rand = function(max, min) {\n    if (max === undefined)\n    {\n      min = 0;\n      max = 32768;\n    }\n    return Math.floor(gen.genrand_real2() * (max - min) + min);\n  }\n  this.seed = function(S) {\n    if (typeof(S) != 'number')\n    {\n      throw new Error(\"seed(S) must take numeric argument; is \" + typeof(S));\n    }\n    gen.init_genrand(S);\n  }\n  this.seed_array = function(A) {\n    if (typeof(A) != 'object')\n    {\n      throw new Error(\"seed_array(A) must take array of numbers; is \" + typeof(A));\n    }\n    gen.init_by_array(A, A.length);\n  }\n}\n\nmodule.exports = Mersenne;\n"},"lineCount":32}},"error":null,"hash":"2ede5b1a7de68237ec0f711adbca219f","cacheData":{"env":{}}}