{"id":"node_modules/faker/vendor/unique.js","dependencies":[{"name":"C:\\Users\\teles\\Documents\\Code\\learning-steele\\React-Typscript-Portfolio\\01-typescript-basics\\03-map-app\\package.json","includedInParent":true,"mtime":1628013696013},{"name":"C:\\Users\\teles\\Documents\\Code\\learning-steele\\React-Typscript-Portfolio\\01-typescript-basics\\03-map-app\\node_modules\\faker\\package.json","includedInParent":true,"mtime":499162500000}],"generated":{"js":"// the `unique` module\nvar unique = {};\n\n// global results store\n// currently uniqueness is global to entire faker instance\n// this means that faker should currently *never* return duplicate values across all API methods when using `Faker.unique`\n// it's possible in the future that some users may want to scope found per function call instead of faker instance\nvar found = {};\n\n// global exclude list of results\n// defaults to nothing excluded\nvar exclude = [];\n\n// current iteration or retries of unique.exec ( current loop depth )\nvar currentIterations = 0;\n\n// uniqueness compare function\n// default behavior is to check value as key against object hash\nvar defaultCompare = function(obj, key) {\n  if (typeof obj[key] === 'undefined') {\n    return -1;\n  }\n  return 0;\n};\n\n// common error handler for messages\nunique.errorMessage = function (now, code, opts) {\n  console.error('error', code);\n  console.log('found', Object.keys(found).length, 'unique entries before throwing error. \\nretried:', currentIterations, '\\ntotal time:', now - opts.startTime, 'ms');\n  throw new Error(code + ' for uniqueness check \\n\\nMay not be able to generate any more unique values with current settings. \\nTry adjusting maxTime or maxRetries parameters for faker.unique()')\n};\n\nunique.exec = function (method, args, opts) {\n  //console.log(currentIterations)\n\n  var now = new Date().getTime();\n\n  opts = opts || {};\n  opts.maxTime = opts.maxTime || 3;\n  opts.maxRetries = opts.maxRetries || 50;\n  opts.exclude = opts.exclude || exclude;\n  opts.compare = opts.compare || defaultCompare;\n\n  if (typeof opts.currentIterations !== 'number') {\n    opts.currentIterations = 0;\n  }\n\n  if (typeof opts.startTime === 'undefined') {\n    opts.startTime = new Date().getTime();\n  }\n\n  var startTime = opts.startTime;\n\n  // support single exclude argument as string\n  if (typeof opts.exclude === 'string') {\n    opts.exclude = [opts.exclude];\n  }\n\n  if (opts.currentIterations > 0) {\n    // console.log('iterating', currentIterations)\n  }\n\n  // console.log(now - startTime)\n  if (now - startTime >= opts.maxTime) {\n    return unique.errorMessage(now, 'Exceeded maxTime:' + opts.maxTime, opts);\n  }\n\n  if (opts.currentIterations >= opts.maxRetries) {\n    return unique.errorMessage(now, 'Exceeded maxRetries:' + opts.maxRetries, opts);\n  }\n\n  // execute the provided method to find a potential satifised value\n  var result = method.apply(this, args);\n\n  // if the result has not been previously found, add it to the found array and return the value as it's unique\n  if (opts.compare(found, result) === -1 && opts.exclude.indexOf(result) === -1) {\n    found[result] = result;\n    opts.currentIterations = 0;\n    return result;\n  } else {\n    // console.log('conflict', result);\n    opts.currentIterations++;\n    return unique.exec(method, args, opts);\n  }\n};\n\nmodule.exports = unique;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/faker/vendor/unique.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/faker/vendor/unique.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}}],"sources":{"node_modules/faker/vendor/unique.js":"// the `unique` module\nvar unique = {};\n\n// global results store\n// currently uniqueness is global to entire faker instance\n// this means that faker should currently *never* return duplicate values across all API methods when using `Faker.unique`\n// it's possible in the future that some users may want to scope found per function call instead of faker instance\nvar found = {};\n\n// global exclude list of results\n// defaults to nothing excluded\nvar exclude = [];\n\n// current iteration or retries of unique.exec ( current loop depth )\nvar currentIterations = 0;\n\n// uniqueness compare function\n// default behavior is to check value as key against object hash\nvar defaultCompare = function(obj, key) {\n  if (typeof obj[key] === 'undefined') {\n    return -1;\n  }\n  return 0;\n};\n\n// common error handler for messages\nunique.errorMessage = function (now, code, opts) {\n  console.error('error', code);\n  console.log('found', Object.keys(found).length, 'unique entries before throwing error. \\nretried:', currentIterations, '\\ntotal time:', now - opts.startTime, 'ms');\n  throw new Error(code + ' for uniqueness check \\n\\nMay not be able to generate any more unique values with current settings. \\nTry adjusting maxTime or maxRetries parameters for faker.unique()')\n};\n\nunique.exec = function (method, args, opts) {\n  //console.log(currentIterations)\n\n  var now = new Date().getTime();\n\n  opts = opts || {};\n  opts.maxTime = opts.maxTime || 3;\n  opts.maxRetries = opts.maxRetries || 50;\n  opts.exclude = opts.exclude || exclude;\n  opts.compare = opts.compare || defaultCompare;\n\n  if (typeof opts.currentIterations !== 'number') {\n    opts.currentIterations = 0;\n  }\n\n  if (typeof opts.startTime === 'undefined') {\n    opts.startTime = new Date().getTime();\n  }\n\n  var startTime = opts.startTime;\n\n  // support single exclude argument as string\n  if (typeof opts.exclude === 'string') {\n    opts.exclude = [opts.exclude];\n  }\n\n  if (opts.currentIterations > 0) {\n    // console.log('iterating', currentIterations)\n  }\n\n  // console.log(now - startTime)\n  if (now - startTime >= opts.maxTime) {\n    return unique.errorMessage(now, 'Exceeded maxTime:' + opts.maxTime, opts);\n  }\n\n  if (opts.currentIterations >= opts.maxRetries) {\n    return unique.errorMessage(now, 'Exceeded maxRetries:' + opts.maxRetries, opts);\n  }\n\n  // execute the provided method to find a potential satifised value\n  var result = method.apply(this, args);\n\n  // if the result has not been previously found, add it to the found array and return the value as it's unique\n  if (opts.compare(found, result) === -1 && opts.exclude.indexOf(result) === -1) {\n    found[result] = result;\n    opts.currentIterations = 0;\n    return result;\n  } else {\n    // console.log('conflict', result);\n    opts.currentIterations++;\n    return unique.exec(method, args, opts);\n  }\n};\n\nmodule.exports = unique;\n"},"lineCount":88}},"error":null,"hash":"64ebf924b5ac29c3107c3572127738ef","cacheData":{"env":{}}}